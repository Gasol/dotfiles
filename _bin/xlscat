#!/usr/bin/env groovy
/**
 * Copyright (c) 2013, Gasol Wu <gasol.wu@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the <organization> nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Gasol Wu BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

@Grab(group='org.apache.poi', module='poi-ooxml', version='3.9')
import org.apache.poi.ss.usermodel.WorkbookFactory
import org.apache.poi.ss.usermodel.Cell


class XLSCat {

    def file

    def sheetIndex

    def newlineReplacementChar

    XLSCat(file) {
        this.file = file
    }

    def getCellValue(cell) {
        def value = ''
        switch(cell.getCellType()) {
            case Cell.CELL_TYPE_BLANK:
                break
            case Cell.CELL_TYPE_NUMERIC:
                cell.setCellType(Cell.CELL_TYPE_STRING);
                value = cell.getStringCellValue()
                break
            case Cell.CELL_TYPE_STRING:
                value = cell.getStringCellValue()
                break
            default:
                break
        }
        value.replaceAll(/\r\n/, newlineReplacementChar)
    }

    void cat() {
        new File(file).withInputStream {
            def wb = WorkbookFactory.create(it)
            def sheet = wb.getSheetAt(sheetIndex?.toInteger())
            for (row in sheet) {
                for (cell in row) {
                    def value = getCellValue(cell)
                    print("$value\t")
                }
                println()
            }
        }
    }

    static main(args) {
        def cli = new CliBuilder(usage: 'xlscat [file...]')
        cli.with {
            usage: 'Self'
            h longOpt: 'help', 'Usage information'
            s longOpt: 'sheet', args: 1, 'Given sheet index'
            n longOpt: 'newline', args: 1, 'Newline replacement char, default: empty char'
        }

        def opt = cli.parse(args)
        if (opt.h) {
            cli.usage()
            return
        }
        def file = opt.arguments()[0]
        def xlscat = new XLSCat(file)
        xlscat.sheetIndex = opt.s ?: 0
        xlscat.newlineReplacementChar = opt.n ?: ''
        xlscat.cat()
    }
}
